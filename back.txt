<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Amazon Parser</title>
</head>

<body>
    <input type="text" id="amazonUrl" placeholder="Enter Amazon URLs separated by space">
    <button onclick="parseAmazonUrls()">Parse</button>
    <div id="result"></div> <!-- Modified to accommodate multiple results -->

    <script>
        function parseAmazonUrls() {
            const urlInput = document.getElementById("amazonUrl").value;
            const urls = urlInput.split(/\s+/); // Split input by space
            document.getElementById("result").innerHTML = ''; // Clear previous results

            urls.forEach(url => { // Process each URL
                if (url.includes("amazon.com/dp/")) {
                    fetch(url)
                        .then(response => response.text())
                        .then(html => {
                            const parser = new DOMParser();
                            const doc = parser.parseFromString(html, "text/html");

                            // Extract title
                            const titleElement = doc.querySelector('span#productTitle');
                            const title = titleElement ? titleElement.innerText.trim() : "Title not found";

                            const landingImageElement = doc.querySelector('div#imgTagWrapperId img');
                            const landingImage = landingImageElement ? landingImageElement.src : "Image not found";

                            const priceElement = doc.querySelector('span.a-price.a-text-price.a-size-medium.apexPriceToPay span.a-offscreen');
                            const price = priceElement ? priceElement.innerText.trim() : "Price not found";

                            // Create elements dynamically for each product
                            const productDiv = document.createElement("div");
                            productDiv.innerHTML = `<p>Title: ${title}</p>
                                                    <p>Landing Image: <img src="${landingImage}" alt="Landing Image" style="width: 100px;"></p>
                                                    <p>Price: ${price}</p>`;
                            document.getElementById("result").appendChild(productDiv);
                        })
                        .catch(error => console.error("Error fetching Amazon page:", error));
                }
                else if (url.includes("macys.com/")) {
                    fetch(url)
                        .then(response => response.text())
                        .then(html => {
                            const parser = new DOMParser();
                            const doc = parser.parseFromString(html, "text/html");

                            // Extract title
                            const brandElement = doc.querySelector('div[data-auto="product-title"] h1.p-brand-title label a[data-auto="product-brand"]');
                            const brand = brandElement ? brandElement.innerText.trim() : "Brand not found";

                            const productNameElement = doc.querySelector('div[data-auto="product-title"] h1.p-brand-title h4[data-auto="product-name"]');
                            const productName = productNameElement ? productNameElement.innerText.trim() : "Product name not found";

                            // Extract price
                            const priceElement = doc.querySelector('div.lowest-sale-price span.bold');
                            const price = priceElement ? priceElement.innerText.trim() : "Price not found";

                            // Create elements dynamically for each product
                            const productDiv = document.createElement("div");
                            productDiv.innerHTML = `<p>Brand: ${brand}</p>
                                <p>Product Name: ${productName}</p>
                                <p>Price: ${price}</p>`;
                            document.getElementById("result").appendChild(productDiv);
                        })
                        .catch(error => console.error("Error fetching product page:", error));
                }
                else {
                    alert("One or more URLs are invalid. Please check and try again.");
                    return; // Exit if any URL is invalid
                }
            });
        }
    </script>
</body>

</html>

















<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Amazon Parser</title>
</head>

<body>
    <input type="text" id="amazonUrl" placeholder="Enter Amazon URLs separated by space">
    <button onclick="parseAmazonUrls()">Parse</button>
    <div id="result"></div> <!-- Modified to accommodate multiple results -->

    <script>
        function parseAmazonUrls() {
            const urlInput = document.getElementById("amazonUrl").value;
            const urls = urlInput.split(/\s+/); // Split input by space
            document.getElementById("result").innerHTML = ''; // Clear previous results

            const proxyUrl = 'http://your-server.com:3000/proxy'; // Replace with your actual proxy URL

            urls.forEach(url => { // Process each URL
                if (url.includes("amazon.com/dp/") || url.includes("macys.com/")) {
                    fetch(proxyUrl, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            method: 'GET',
                            url: url,
                        }),
                    })
                    .then(response => response.json())
                    .then(data => {
                        const parser = new DOMParser();
                        const doc = parser.parseFromString(data, "text/html");

                        let title, landingImage, price;

                        if (url.includes("amazon.com/dp/")) {
                            // Extract title, landingImage, and price for Amazon
                            const titleElement = doc.querySelector('span#productTitle');
                            title = titleElement ? titleElement.innerText.trim() : "Title not found";

                            const landingImageElement = doc.querySelector('div#imgTagWrapperId img');
                            landingImage = landingImageElement ? landingImageElement.src : "Image not found";

                            const priceElement = doc.querySelector('span.a-price.a-text-price.a-size-medium.apexPriceToPay span.a-offscreen');
                            price = priceElement ? priceElement.innerText.trim() : "Price not found";
                        } else if (url.includes("macys.com/")) {
                            // Extract brand, productName, and price for Macy's
                            const brandElement = doc.querySelector('div[data-auto="product-title"] h1.p-brand-title label a[data-auto="product-brand"]');
                            const brand = brandElement ? brandElement.innerText.trim() : "Brand not found";

                            const productNameElement = doc.querySelector('div[data-auto="product-title"] h1.p-brand-title h4[data-auto="product-name"]');
                            const productName = productNameElement ? productNameElement.innerText.trim() : "Product name not found";

                            const priceElement = doc.querySelector('div.lowest-sale-price span.bold');
                            price = priceElement ? priceElement.innerText.trim() : "Price not found";
                        }

                        // Create elements dynamically for each product
                        const productDiv = document.createElement("div");
                        productDiv.innerHTML = `<p>Title/Brand: ${title || brand}</p>
                                                <p>Landing Image: <img src="${landingImage}" alt="Landing Image" style="width: 100px;"></p>
                                                <p>Price: ${price}</p>`;
                        document.getElementById("result").appendChild(productDiv);
                    })
                    .catch(error => console.error("Error fetching page:", error));
                } else {
                    alert("One or more URLs are invalid. Please check and try again.");
                    return; // Exit if any URL is invalid
                }
            });
        }
    </script></body>

</html>